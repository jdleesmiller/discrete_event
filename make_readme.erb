= discrete_event

http://github.com/jdleesmiller/discrete_event

== SYNOPSIS

This gem provides some tools for discrete event simulation (DES) in ruby. The
main one is a {DiscreteEvent::EventQueue} that stores actions (ruby blocks) to
be executed at chosen times.

The example below uses the {DiscreteEvent::Simulation} class, which is a
subclass of {DiscreteEvent::EventQueue}, to simulate an M/M/1 queueing system.

  require 'rubygems'
  require 'discrete_event'
<%= 
  File.readlines('test/discrete_event/ex_mm1_queue.rb').
    select{|l| l =~ /^\s{4}/ || l.strip.size == 0}.
    map{|l| l.sub(/^\s{2}/,'')}.join
%>

This and other examples are available in the <tt>test/discrete_event</tt>
directory.

In this example, the whole simulation happens in a single object; if you have
multiple objects, you can use the {DiscreteEvent::Events} mix-in to make them
easily share a single event queue.

== INSTALLATION

  gem install discrete_event

== REFERENCES

* {http://en.wikipedia.org/wiki/Discrete_event_simulation}

You may also be interested in the Ruby bindings of the GNU Science Library, which provides a variety of pseudo-random number generators and functions for generating random variates from various distributions. It also provides useful things like histograms.

* {http://www.gnu.org/software/gsl/}
* {http://rb-gsl.rubyforge.org/}
* The libgsl-ruby package in Debian.

== HISTORY

<em>1.0.0:</em>
* split {DiscreteEvent::EventQueue} out of DiscreteEvent::Simulation for
  easier sharing between objects
* added {DiscreteEvent::Events} mix-in

<em>0.3.0:</em>
* reorganized for compatibility with gemma 2.0; no functional changes
* added major, minor and patch version constants

<em>0.2.0:</em>
* added DiscreteEvent::Simulation#at_each_index (removed in 1.0.0)
* added DiscreteEvent::Simulation#recur_after
* added DiscreteEvent::Simulation#every
* {DiscreteEvent::FakeRand} now supports the <tt>Kernel::rand(n)</tt> form. 

<em>0.1.0:</em>
* first release

== LICENSE

Copyright (c) 2010-2011 John Lees-Miller

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

